FROM timescale/timescaledb:2.17.2-pg17 as timescale-pg17

FROM timescale-pg17 AS timescaledb-toolkit

RUN touch /usr/local/share/postgresql/extension/{timescaledb_toolkit.control,timescaledb_toolkit.so} \
    && chown -R postgres:postgres /usr/local/share/postgresql/extension \
    && chown -R postgres:postgres /usr/local/lib/postgresql

RUN apk update && apk add \
        ca-certificates \
        git \
        openssl \
        openssl-dev \
        tar \
        wget \
        curl \
        coreutils \
        gcc \
        make \
        cmake \
        build-base \
        rust \
        cargo \
        boost-libs \
        boost-dev \
        openldap-dev \
        clang19-libclang \

USER postgres

ARG VERSION=1.19.0
ARG TARGETARCH
RUN set -ex \
    && if [ "$TARGETARCH" == "amd64" ] || [ "$TARGETARCH" == "arm64" ]; then \
            export PATH="/var/lib/postgresql/.cargo/bin:${PATH}" \
            && cargo install --version '=0.12.8' --force cargo-pgrx \
            && cargo install rustfmt; \
       fi

RUN set -ex \
    && if [ "$TARGETARCH" == "amd64" ] || [ "$TARGETARCH" == "arm64" ]; then \
        export PATH="/var/lib/postgresql/.cargo/bin:${PATH}" \
        && mkdir -p /var/lib/postgresql/build/ \
        && cd /var/lib/postgresql/build \
            && git clone https://github.com/timescale/timescaledb-toolkit.git . \
            && git checkout ${VERSION} \
            && cd extension \
            && mkdir -p /var/lib/postgresql/.pgrx \
            && cargo pgrx init --pg17 /usr/local/bin/pg_config \
            && cargo pgrx install --release \
            && cargo run --manifest-path ../tools/post-install/Cargo.toml -- /usr/local/bin/pg_config \
        && cd ~ \
        && rm -rf /build \
        && echo "OK" /toolkit; \
    fi
